alertmanager:
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['nodeName', 'ruleName']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
      routes:
      - receiver: 'webhook'
        matchers:
          - app = "uyuni-suite"
    receivers:
    - name: 'null'
    - name: 'webhook'
      webhook_configs:
      - url: 'http://alert-check.default.svc:5000/'
    templates:
    - '/etc/alertmanager/config/*.tmpl'

  alertmanagerSpec:
    image:
      registry: {{ .Values.common.repository }}
      repository: prometheus/alertmanager
      tag: v0.25.0
      sha: ""
    portName: "http-web"
    {{- with .Values.prometheus.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.prometheus.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts: 
      - alertmanager.{{ .Values.common.ingress.domain }}
    paths:
      - /
    pathType: ImplementationSpecific

grafana:
  image:
    repository: {{ .Values.common.repository }}/grafana/grafana
  {{- with .Values.prometheus.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.prometheus.tolerations }}
  tolerations:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.{{ .Values.common.ingress.domain }}
    path: /

  testFramework:
    enabled: true
    image: {{ .Values.common.repository }}/bats/bats
    tag: "v1.4.1"
  downloadDashboardsImage:
    repository: {{ .Values.common.repository }}/curlimages/curl
    tag: 7.85.0
    sha: ""
    pullPolicy: IfNotPresent
  initChownData:
    image:
      repository: {{ .Values.common.repository }}/busybox
      tag: "1.31.1"
      sha: ""
      pullPolicy: IfNotPresent
  sidecar:
    image:
      repository: {{ .Values.common.repository }}/kiwigrid/k8s-sidecar
      tag: 1.22.0
      sha: ""
  imageRenderer:
    image:
      # image-renderer Image repository
      repository: {{ .Values.common.repository }}/grafana/grafana-image-renderer
      # image-renderer Image tag
      tag: latest

prometheusOperator:
  enabled: true  
  {{- with .Values.prometheus.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.prometheus.tolerations }}
  tolerations:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  admissionWebhooks:
    patch:
      enabled: true
      image:
        registry: {{ .Values.common.repository }}
        repository: ingress-nginx/kube-webhook-certgen
        tag: v20221220-controller-v1.5.1-58-g787ea74b6
  image:
    registry: {{ .Values.common.repository }}
    repository: prometheus-operator/prometheus-operator
  prometheusConfigReloader:
    image:
      registry: {{ .Values.common.repository }}
      repository: prometheus-operator/prometheus-config-reloader
  thanosImage:
    registry: {{ .Values.common.repository }}
    repository: thanos/thanos
    tag: v0.30.2

kube-state-metrics:
  image:
    registry: {{ .Values.common.repository }}
    repository: kube-state-metrics/kube-state-metrics
  prometheus:
    monitor:
      enabled: true
      additionalLabels:
        release: prometheus-operator
  {{- with .Values.prometheus.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.prometheus.tolerations }}
  tolerations:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  kubeRBACProxy:
    enabled: false
    image:
      registry: {{ .Values.common.repository }}
      repository: brancz/kube-rbac-proxy
      tag: v0.14.0

prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.{{ .Values.common.ingress.domain }}
    paths: 
      - /
    pathType: ImplementationSpecific
  prometheusSpec:
    {{- with .Values.prometheus.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.prometheus.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}  
    image:
      registry: {{ .Values.common.repository }}
      repository: prometheus/prometheus
      tag: v2.42.0
      sha: ""
    shards: null
    serviceMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
    - job_name: gpu-metrics
      scrape_interval: 1s
      metrics_path: /metrics
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - gpu-operator
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: kubernetes_node

prometheus-node-exporter:
  image:
    registry: {{ .Values.common.repository }} 
    repository: prometheus/node-exporter
  kubeRBACProxy:
    enabled: false
    image:
      registry: {{ .Values.common.repository }}
      repository: brancz/kube-rbac-proxy
      tag: v0.14.0
